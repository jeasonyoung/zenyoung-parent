<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>top.zenyoung</groupId>
    <artifactId>parent</artifactId>
    <packaging>pom</packaging>
    <version>3.2.0</version>

    <name>parent</name>
    <description>zenyoung tools for Springboot2</description>
    <url>https://github.com/jeasonyoung/zenyoung-parent</url>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.17</version>
        <relativePath/>
    </parent>

    <repositories>
        <repository>
            <id>aliyun-central</id>
            <url>https://maven.aliyun.com/repository/central</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>aliyun-public</id>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <properties>
        <!-- spring -->
        <spring-cloud.version>2021.0.8</spring-cloud.version>
        <alibaba-cloud.version>2021.0.5.0</alibaba-cloud.version>

        <!-- zenyoung -->
        <zenyoung.version>3.1.0</zenyoung.version>

        <!-- modelmapper -->
        <modelmapper.version>3.1.0</modelmapper.version>
        <!-- javax.el -->
        <el-api.version>3.0.1-b06</el-api.version>

        <!-- mybatis-plus -->
        <mybatis-plus.version>3.5.3.1</mybatis-plus.version>
        <!-- flyway -->
        <flyway-core.version>8.2.2</flyway-core.version>
        <!-- p6spy -->
        <p6spy.version>3.9.1</p6spy.version>

        <!-- r2dbc -->
        <r2dbc-mysql.version>0.8.2.RELEASE</r2dbc-mysql.version>

        <!-- jetcache -->
        <jetcache.version>2.7.2</jetcache.version>
        <!-- redisson -->
        <redisson.version>3.17.4</redisson.version>

        <!-- jwt -->
        <nimbus-jose-jwt.version>9.24.4</nimbus-jose-jwt.version>

        <!-- protobuf -->
        <protobuf-java.version>3.21.12</protobuf-java.version>
        <!-- kryo -->
        <kryo.version>5.5.0</kryo.version>
        <!-- snappy -->
        <snappy-java.version>1.1.9.1</snappy-java.version>
        <!-- bouncycastle -->
        <bcprov-jdk15on.version>1.70</bcprov-jdk15on.version>

        <!-- 阿里云 SDK-->
        <aliyun-core.version>4.6.1</aliyun-core.version>
        <!-- 阿里云 短信 -->
        <aliyun-dysmsapi.version>2.2.1</aliyun-dysmsapi.version>
        <aliyun-sdk-mns.version>1.1.9.2</aliyun-sdk-mns.version>
        <!-- 阿里云-oss -->
        <aliyun-oss.version>3.16.1</aliyun-oss.version>
        <!-- 华为-obs -->
        <huawei-obs.version>3.22.12</huawei-obs.version>

        <!-- tools -->
        <guava.version>30.1.1-jre</guava.version>
        <auto-service.version>1.1.1</auto-service.version>
        <commons-io.version>2.8.0</commons-io.version>
        <zxing.version>3.5.1</zxing.version>
        <easypoi.version>4.4.0</easypoi.version>
        <oshi-core.version>6.4.4</oshi-core.version>
        <retrofit.version>2.9.0</retrofit.version>

        <!-- swagger -->
        <swagger-v3.version>2.2.9</swagger-v3.version>
        <knife4j-openapi3.version>4.3.0</knife4j-openapi3.version>

        <!-- jfx -->
        <bootstrapfx-core.version>0.3.0</bootstrapfx-core.version>
        <ikonli.version>2.6.0</ikonli.version>
        <jipsy.version>0.6.0</jipsy.version>

        <!-- apt -->
        <apt-maven-plugin.version>1.1.3</apt-maven-plugin.version>
        <!-- docker -->
        <dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>
        <!-- os -->
        <os-maven-plugin.version>1.7.1</os-maven-plugin.version>
        <!-- jfx -->
        <javafx-maven-plugin.version>8.8.3</javafx-maven-plugin.version>
        <!-- gpg -->
        <maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version>

        <!-- 模块 -->
        <zenyoung-common.version>3.1.0</zenyoung-common.version>
        <zenyoung-boot.version>3.2.0</zenyoung-boot.version>
        <zenyoung-boot-common.version>3.2.0</zenyoung-boot-common.version>
        <zenyoung-boot-mvc.version>3.2.0</zenyoung-boot-mvc.version>
        <zenyoung-boot-webflux.version>1.0.0</zenyoung-boot-webflux.version>
        <zenyoung-micro.version>3.2.0</zenyoung-micro.version>
        <zenyoung-data-common.version>1.0.0</zenyoung-data-common.version>
        <zenyoung-data-jpa.version>3.2.0</zenyoung-data-jpa.version>
        <zenyoung-querydsl-r2dbc.version>1.0.0</zenyoung-querydsl-r2dbc.version>
        <zenyoung-data-r2dbc.version>1.0.0</zenyoung-data-r2dbc.version>
        <zenyoung-data-mybatis.version>3.2.0</zenyoung-data-mybatis.version>
        <zenyoung-graphics-utils.version>3.1.0</zenyoung-graphics-utils.version>
        <zenyoung-graphics-captcha.version>3.1.0</zenyoung-graphics-captcha.version>
        <zenyoung-graphics-boot.version>3.2.0</zenyoung-graphics-boot.version>
        <zenyoung-redis.version>3.2.0</zenyoung-redis.version>
        <zenyoung-sms.version>3.2.0</zenyoung-sms.version>
        <zenyoung-segment.version>3.2.0</zenyoung-segment.version>
        <zenyoung-quartz.version>1.1.0</zenyoung-quartz.version>
        <zenyoung-file-common.version>3.1.0</zenyoung-file-common.version>
        <zenyoung-file-aliyun.version>3.1.0</zenyoung-file-aliyun.version>
        <zenyoung-file-huawei.version>3.1.0</zenyoung-file-huawei.version>
        <zenyoung-file-boot.version>3.2.0</zenyoung-file-boot.version>
        <zenyoung-netty-common.version>3.1.0</zenyoung-netty-common.version>
        <zenyoung-netty-server.version>3.2.0</zenyoung-netty-server.version>
        <zenyoung-netty-client.version>3.2.0</zenyoung-netty-client.version>
        <zenyoung-jfx-boot.version>3.1.0</zenyoung-jfx-boot.version>
        <zenyoung-fc-runtime-huawei.version>3.1.0</zenyoung-fc-runtime-huawei.version>
        <zenyoung-opencv.version>1.0.0</zenyoung-opencv.version>
        <zenyoung-retrofit.version>1.1.0</zenyoung-retrofit.version>
        <zenyoung-generator.version>3.2.0</zenyoung-generator.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- spring cloud dependencies  -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- spring cloud alibaba -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${alibaba-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- modelmapper -->
            <dependency>
                <groupId>org.modelmapper</groupId>
                <artifactId>modelmapper</artifactId>
                <version>${modelmapper.version}</version>
            </dependency>
            <!-- javax.el -->
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>javax.el-api</artifactId>
                <version>${el-api.version}</version>
            </dependency>

            <!-- mybatis-plus -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-annotation</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <!-- flywaydb -->
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-mysql</artifactId>
                <version>${flyway-core.version}</version>
            </dependency>

            <!-- p6spy -->
            <dependency>
                <groupId>p6spy</groupId>
                <artifactId>p6spy</artifactId>
                <version>${p6spy.version}</version>
            </dependency>

            <!-- r2dbc -->
            <dependency>
                <groupId>dev.miku</groupId>
                <artifactId>r2dbc-mysql</artifactId>
                <version>${r2dbc-mysql.version}</version>
            </dependency>

            <!-- jetcache -->
            <dependency>
                <groupId>com.alicp.jetcache</groupId>
                <artifactId>jetcache-starter-redisson</artifactId>
                <version>${jetcache.version}</version>
            </dependency>
            <!-- redisson -->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <!-- jwt -->
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>${nimbus-jose-jwt.version}</version>
            </dependency>

            <!-- protobuf -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf-java.version}</version>
            </dependency>

            <!-- kryo -->
            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>kryo</artifactId>
                <version>${kryo.version}</version>
            </dependency>

            <!-- snappy -->
            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>${snappy-java.version}</version>
            </dependency>

            <!-- bouncycastle -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bcprov-jdk15on.version}</version>
            </dependency>

            <!-- 阿里云 -->
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-core</artifactId>
                <version>${aliyun-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-dysmsapi</artifactId>
                <version>${aliyun-dysmsapi.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun.mns</groupId>
                <artifactId>aliyun-sdk-mns</artifactId>
                <version>${aliyun-sdk-mns.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun-oss.version}</version>
            </dependency>
            <dependency>
                <groupId>com.huaweicloud</groupId>
                <artifactId>esdk-obs-java</artifactId>
                <version>${huawei-obs.version}</version>
            </dependency>

            <!-- tools -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.auto.service</groupId>
                <artifactId>auto-service</artifactId>
                <version>${auto-service.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>core</artifactId>
                <version>${zxing.version}</version>
            </dependency>

            <!-- easy-poi -->
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-base</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-web</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-annotation</artifactId>
                <version>${easypoi.version}</version>
            </dependency>

            <!-- oshi 系统信息 -->
            <dependency>
                <groupId>com.github.oshi</groupId>
                <artifactId>oshi-core</artifactId>
                <version>${oshi-core.version}</version>
            </dependency>

            <!-- retrofit -->
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>retrofit</artifactId>
                <version>${retrofit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>converter-jackson</artifactId>
                <version>${retrofit.version}</version>
            </dependency>

            <!-- swagger -->
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>2.2.9</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-openapi3-spring-boot-starter</artifactId>
                <version>${knife4j-openapi3.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-openapi3-webflux-spring-boot-starter</artifactId>
                <version>${knife4j-openapi3.version}</version>
            </dependency>

            <!-- jfx -->
            <dependency>
                <groupId>org.kordamp.bootstrapfx</groupId>
                <artifactId>bootstrapfx-core</artifactId>
                <version>${bootstrapfx-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kordamp.ikonli</groupId>
                <artifactId>ikonli-javafx</artifactId>
                <version>${ikonli.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kordamp.ikonli</groupId>
                <artifactId>ikonli-fontawesome5-pack</artifactId>
                <version>${ikonli.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kordamp.jipsy</groupId>
                <artifactId>jipsy</artifactId>
                <version>${jipsy.version}</version>
            </dependency>

            <!-- 模块 -->
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>common</artifactId>
                <version>${zenyoung-common.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>boot</artifactId>
                <version>${zenyoung-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>boot-common</artifactId>
                <version>${zenyoung-boot-common.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>boot-mvc</artifactId>
                <version>${zenyoung-boot-mvc.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>boot-webflux</artifactId>
                <version>${zenyoung-boot-webflux.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>micro</artifactId>
                <version>${zenyoung-micro.version}</version>
            </dependency>
            <!-- data -->
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>data-common</artifactId>
                <version>${zenyoung-data-common.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>data-jpa</artifactId>
                <version>${zenyoung-data-jpa.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>querydsl-r2dbc</artifactId>
                <version>${zenyoung-querydsl-r2dbc.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>data-r2dbc</artifactId>
                <version>${zenyoung-data-r2dbc.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>data-mybatis</artifactId>
                <version>${zenyoung-data-mybatis.version}</version>
            </dependency>
            <!-- graphics -->
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>graphics-utils</artifactId>
                <version>${zenyoung-graphics-utils.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>graphics-captcha</artifactId>
                <version>${zenyoung-graphics-captcha.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>graphics-boot</artifactId>
                <version>${zenyoung-graphics-boot.version}</version>
            </dependency>
            <!-- redis -->
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>redis</artifactId>
                <version>${zenyoung-redis.version}</version>
            </dependency>
            <!-- sms -->
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>sms</artifactId>
                <version>${zenyoung-sms.version}</version>
            </dependency>
            <!-- segment -->
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>segment</artifactId>
                <version>${zenyoung-segment.version}</version>
            </dependency>
            <!-- quartz -->
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>quartz</artifactId>
                <version>${zenyoung-quartz.version}</version>
            </dependency>
            <!-- file -->
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>file-common</artifactId>
                <version>${zenyoung-file-common.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>file-aliyun</artifactId>
                <version>${zenyoung-file-aliyun.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>file-huawei</artifactId>
                <version>${zenyoung-file-huawei.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>file-boot</artifactId>
                <version>${zenyoung-file-boot.version}</version>
            </dependency>
            <!-- netty -->
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>netty-common</artifactId>
                <version>${zenyoung-netty-common.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>netty-server</artifactId>
                <version>${zenyoung-netty-server.version}</version>
            </dependency>
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>netty-client</artifactId>
                <version>${zenyoung-netty-client.version}</version>
            </dependency>
            <!-- jfx -->
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>jfx-boot</artifactId>
                <version>${zenyoung-jfx-boot.version}</version>
            </dependency>
            <!-- fc-runtime -->
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>fc-runtime-huawei</artifactId>
                <version>${zenyoung-fc-runtime-huawei.version}</version>
            </dependency>
            <!-- opencv -->
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>opencv</artifactId>
                <version>${zenyoung-opencv.version}</version>
            </dependency>
            <!-- retrofit -->
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>retrofit</artifactId>
                <version>${zenyoung-retrofit.version}</version>
            </dependency>
            <!-- generator -->
            <dependency>
                <groupId>top.zenyoung</groupId>
                <artifactId>generator</artifactId>
                <version>${zenyoung-generator.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <!-- spring-boot-maven-plugin -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>
                        <image>
                            <builder>paketobuildpacks/builder:tiny</builder>
                            <env>
                                <BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
                            </env>
                        </image>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.mysema.maven</groupId>
                    <artifactId>apt-maven-plugin</artifactId>
                    <version>${apt-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${dockerfile-maven-plugin.version}</version>
                </plugin>
                <!-- jfx -->
                <plugin>
                    <groupId>com.zenjava</groupId>
                    <artifactId>javafx-maven-plugin</artifactId>
                    <version>${javafx-maven-plugin.version}</version>
                </plugin>
                <!-- gpg -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${maven-gpg-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <distributionManagement>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
        </repository>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>yangyong</name>
            <email>young1982@foxmail.com</email>
        </developer>
    </developers>
    <scm>
        <connection>scm:git@github.com:jeasonyoung/zenyoung-parent.git</connection>
        <developerConnection>scm:git@github.com:jeasonyoung/zenyoung-parent.git</developerConnection>
        <url>git@github.com:jeasonyoung/zenyoung-parent.git</url>
    </scm>

    <profiles>
        <profile>
            <id>debug</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- 上传处理 -->
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <!-- java compiler -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                            <encoding>${project.build.sourceEncoding}</encoding>
                        </configuration>
                    </plugin>
                    <!-- java source -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- java doc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <show>private</show>
                            <nohelp>true</nohelp>
                            <charset>${project.build.sourceEncoding}</charset>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <docencoding>${project.build.sourceEncoding}</docencoding>
                            <!-- 禁用doclint,不严格检查 -->
                            <additionalJOption>-Xdoclint:none</additionalJOption>
                            <!-- 文档解析出错时仍然继续 -->
                            <failOnError>false</failOnError>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- gpg -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>