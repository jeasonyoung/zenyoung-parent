<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false" scan="true" scanPeriod="10 seconds">
    <contextName>logback</contextName>
    <!-- 定义日志文件存储地址 -->
    <property name="root" value="./logs"/>
    <!-- 定义日志文件前缀 -->
    <property name="log_file_prefix" value="code-generator"/>
    <!-- 定义日志内容格式 -->
    <property name="log_pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS}[%thread] %-5level %logger{50} - %msg %n"/>

    <!-- 控制台输出 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
        <encoder>
            <!-- 格式化输出: %d 表示日期, %thread 表示线程名, %-5level 级别从左显示5个字符串宽度 %msg 日志消息, %n 换行符 -->
            <pattern>${log_pattern}</pattern>
            <!-- 设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- debug -->
    <appender name="debug_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件-->
        <file>${root}/${log_file_prefix}_debug.log</file>
        <!-- 日志文件输出格式 -->
        <encoder>
            <pattern>${log_pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器滚动策略,按日期、文件大小切割 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志归档 -->
            <fileNamePattern>${root}/${log_file_prefix}_debug.log-%d{yyyy-MM-dd}.%i</fileNamePattern>
            <!-- 日志文件保留天数 -->
            <maxHistory>2</maxHistory>
            <!-- 日志文件最大的大小 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>20MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <!-- 日志文件记录日志级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>debug</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- info -->
    <appender name="info_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件-->
        <file>${root}/${log_file_prefix}_info.log</file>
        <!-- 日志文件输出格式 -->
        <encoder>
            <pattern>${log_pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器滚动策略,按日期、文件大小切割 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志归档 -->
            <fileNamePattern>${root}/${log_file_prefix}_info.log-%d{yyyy-MM-dd}.%i</fileNamePattern>
            <!-- 日志文件保留天数 -->
            <maxHistory>5</maxHistory>
            <!-- 日志文件最大的大小 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>20MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <!-- 日志文件记录日志级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- warn -->
    <appender name="warn_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件-->
        <file>${root}/${log_file_prefix}_warn.log</file>
        <!-- 日志文件输出格式 -->
        <encoder>
            <pattern>${log_pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器滚动策略,按日期、文件大小切割 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志归档 -->
            <fileNamePattern>${root}/${log_file_prefix}_warn.log-%d{yyyy-MM-dd}.%i</fileNamePattern>
            <!-- 日志文件保留天数 -->
            <maxHistory>5</maxHistory>
            <!-- 日志文件最大的大小 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>20MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <!-- 日志文件记录日志级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>warn</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- error -->
    <appender name="error_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件-->
        <file>${root}/${log_file_prefix}_error.log</file>
        <!-- 日志文件输出格式 -->
        <encoder>
            <pattern>${log_pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器滚动策略,按日期、文件大小切割 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志归档 -->
            <fileNamePattern>${root}/${log_file_prefix}_error.log-%d{yyyy-MM-dd}.%i</fileNamePattern>
            <!-- 日志文件保留天数 -->
            <maxHistory>5</maxHistory>
            <!-- 日志文件最大的大小 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>20MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <!-- 日志文件记录日志级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 日志输出级别 -->

    <!-- 开发环境/测试环境 -->
    <springProfile name="dev,beta">
        <root level="debug">
            <appender-ref ref="console"/>
            <appender-ref ref="debug_file"/>
            <appender-ref ref="info_file"/>
            <appender-ref ref="warn_file"/>
            <appender-ref ref="error_file"/>
        </root>
    </springProfile>

    <!-- 生成环境 -->
    <springProfile name="prod">
        <root level="info">
            <appender-ref ref="info_file"/>
            <appender-ref ref="warn_file"/>
            <appender-ref ref="error_file"/>
        </root>
    </springProfile>

</configuration>